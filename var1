let palette = ['#fff', '#aaa'];
let palette2 = [
  '#ff0044', '#ff5500', '#ffee00', '#77ff00', '#00ff22',
  '#00ffbb', '#00aaff', '#0011ff', '#8800ff', '#ff00dd'
];
let colors = [];
let vmin, vmax;
let cx, cy;
let textures = [];
let NUM = 8;

function setup() {
  pixelDensity(1);
  createCanvas(1112, 834, WEBGL);
  // createCanvas(800, 800, WEBGL);
  noStroke();
  vmin = min(width, height);
  vmax = max(width, height);
  cx = width / 2;
  cy = height / 2;

  for (let i = 0; i < palette2.length; i++) {
    colors.push([]);
    for (let j = 0; j < 4; j++) {
      let c0 = color(palette2[i]);
      let c1 = color(0);
      colors[i].push(lerpColor(c0, c1, map(j, 0, 3, 0, 0.5)));
    }
    textures[i] = createGraphics(512, 512);
    drawTexture(textures[i], i);
  }
	background(255);
}

/**
 * テクスチャを描画
 */
function drawTexture(tex, colorIndex) {
  let W = tex.width;
  let H = tex.height;
  let texPalette = colors[colorIndex];
  
  tex.background(texPalette[0]);
  
  let step = TAU / NUM;
  tex.stroke(40, 160);
  tex.push();
  {
    tex.translate(W / 2, H / 2);
    for (let i = 0; i < NUM; i++) {
      let angle = i * step;
      tex.rotate(step);
      tex.fill(texPalette[i % 4]);
      tex.arc(0, 0, W, H, 0, step, PIE);
    }
    
    tex.noStroke();
    tex.fill(texPalette[3]);
    tex.circle(0, 0, 20);
  }
  tex.pop();
}
