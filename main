let palette = ['#fff', '#aaa'];
let palette2 = [
  '#ff0044', '#ff5500', '#ffee00', '#77ff00', '#00ff22',
  '#00ffbb', '#00aaff', '#0011ff', '#8800ff', '#ff00dd'
];
let colors = [];
let vmin, vmax;
let cx, cy;
let textures = [];
let NUM = 8;

function setup() {
  pixelDensity(1);
  createCanvas(1112, 834, WEBGL);
  // createCanvas(800, 800, WEBGL);
  noStroke();
  vmin = min(width, height);
  vmax = max(width, height);
  cx = width / 2;
  cy = height / 2;

  for (let i = 0; i < palette2.length; i++) {
    colors.push([]);
    for (let j = 0; j < 4; j++) {
      let c0 = color(palette2[i]);
      let c1 = color(0);
      colors[i].push(lerpColor(c0, c1, map(j, 0, 3, 0, 0.5)));
    }
    textures[i] = createGraphics(512, 512);
    drawTexture(textures[i], i);
  }
	background(255);
}


function drawTexture(tex, colorIndex) {
  let W = tex.width;
  let H = tex.height;
  let texPalette = colors[colorIndex];
  
  tex.background(texPalette[0]);
  
  let step = TAU / NUM;
  tex.stroke(40, 160);
  tex.push();
  {
    tex.translate(W / 2, H / 2);
    for (let i = 0; i < NUM; i++) {
      let angle = i * step;
      tex.rotate(step);
      tex.fill(texPalette[i % 4]);
      tex.arc(0, 0, W, H, 0, step, PIE);
    }
    
    tex.noStroke();
    tex.fill(texPalette[3]);
    tex.circle(0, 0, 20);
  }
  tex.pop();
}
function draw() {
  let sec = millis() / 1000;
  let radius = vmax * 0.1;
  let sz = vmax * 0.8;
  let y = vmin * -0.1;
  
  background(palette[0]);
  translate(0, 140);
  ambientLight(160, 160, 160);
  directionalLight(255, 255, 255, -1, 1, -1);
  rotateX(1);
  orbitControl();
  let N = 4;
  for (let i = 0; i < N; i++) {
    let z = (i - N / 2 + 0.5) * sz / N;
    for (let j = 0; j < N; j++) {
      let x = (j - N / 2 + 0.5) * sz / N;
      let n = noise(x, z) * 2 - 1;
      push();
      {
        translate(x, y, z);
        rotateX(n * 0.2);
        rotateY(sec * -0.1 + i + j);
        
        let index = (i * 4 + j) % textures.length;
        unbrella(0, 0, 0, radius, index);
      }
      pop();
    }
  }
  
  // for debug
  // push();
  // {
  //   translate(0, 0, 0);
  //   image(textures[0], -cx, -cy);
  // }
  // pop();
}

function unbrella(x, y, z, radius, colorIndex) {
  let theta = TAU;
  let phi = PI * 0.45;
  let thetaOffset = 0;
  let phiOffset = -PI * 0.5;
  let detailX = 8 * 3;
  let detailY = 3 * 2;
  let texColors = colors[colorIndex];
  
  push();
  {
    translate(x, y + radius * 0.2, z);
    
    push();
    {
      texture(textures[colorIndex]);
      spherical(radius, theta, phi, thetaOffset, phiOffset, detailX, detailY);
    }
    pop();
    
    push();
    {
      fill(texColors[0]);
      translate(0, -radius * 1.05, 0);
      
      cylinder(radius * 0.02, radius * 0.1, 8);
    }
    pop();
    
    push();
    {
      fill(texColors[3]);
      translate(0, -radius * 0.8, 0);
      
      cylinder(radius * 0.02, radius * 0.38, 8);
    }
    pop();
    142
